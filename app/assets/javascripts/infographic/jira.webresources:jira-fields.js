/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/field-templates.soy' */
// This file was automatically generated from field-templates.soy.
// Please don't edit this file by hand.

if (typeof JIRA == 'undefined') { var JIRA = {}; }
if (typeof JIRA.Templates == 'undefined') { JIRA.Templates = {}; }
if (typeof JIRA.Templates.Fields == 'undefined') { JIRA.Templates.Fields = {}; }


JIRA.Templates.Fields.username = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append((opt_data.escape) ? soy.$$escapeHtml(opt_data.displayName) : opt_data.displayName);
  return opt_sb ? '' : output.toString();
};


JIRA.Templates.Fields.recipientUsername = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li data-username="', soy.$$escapeHtml(opt_data.username), '" title=', soy.$$escapeHtml(opt_data.username), '><span><span class="user-hover" rel="', soy.$$escapeHtml(opt_data.username), '"><img src="', soy.$$escapeHtml(opt_data.icon), '" title="');
  JIRA.Templates.Fields.username(opt_data, output);
  output.append('"><span title="');
  JIRA.Templates.Fields.username(opt_data, output);
  output.append('">');
  JIRA.Templates.Fields.username(opt_data, output);
  output.append('</span></span>', (! opt_data.readOnly) ? '<span class="remove-recipient item-delete"/>' : '', '</span></li>');
  return opt_sb ? '' : output.toString();
};


JIRA.Templates.Fields.recipientEmail = function(opt_data, opt_sb) {
  var output = opt_sb || new soy.StringBuilder();
  output.append('<li data-email="', soy.$$escapeHtml(opt_data.email), '" title=', soy.$$escapeHtml(opt_data.email), '><span><img src="', soy.$$escapeHtml(opt_data.icon), '" title="', soy.$$escapeHtml(opt_data.email), '"><span title="', soy.$$escapeHtml(opt_data.email), '">', soy.$$escapeHtml(opt_data.email), '</span><span class="remove-recipient item-delete"/></span></li>');
  return opt_sb ? '' : output.toString();
};

/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/IssuePicker.js' */
JIRA.IssuePicker=AJS.MultiSelect.extend({_formatResponse:function(response){var ret=[],canonicalBaseUrl=(function(){var uri=parseUri(window.location);return uri.protocol+"://"+uri.authority})();if(response&&response.sections){AJS.$(response.sections).each(function(i,section){var groupDescriptor=new AJS.GroupDescriptor({weight:i,label:section.label,description:section.sub});if(section.issues&&section.issues.length>0){AJS.$(section.issues).each(function(){groupDescriptor.addItem(new AJS.ItemDescriptor({highlighted:true,value:this.key,label:this.key+" - "+this.summaryText,icon:this.img?canonicalBaseUrl+contextPath+this.img:null,html:this.keyHtml+" - "+this.summary}))})}ret.push(groupDescriptor)})}return ret},_getDefaultOptions:function(){return AJS.$.extend(true,this._super(),{ajaxOptions:{formatResponse:this._formatResponse}})},_launchPopup:function(){function getWithDefault(value,def){if(typeof value=="undefined"||value==null){return def}else{return value}}var url,urlParam,vWinUsers,options,instance=this;JIRA.IssuePicker.callback=function(items){if(typeof items==="string"){items=JSON.parse(items)}instance._addMultipleItems(items,true);instance.$field.focus()};options=this.options.ajaxOptions.data;url=contextPath+"/secure/popups/IssuePicker.jspa?";urlParam={singleSelectOnly:"false",decorator:"popup",currentIssue:options.currentIssueKey||"",showSubTasks:getWithDefault(options.showSubTasks,false),showSubTasksParent:getWithDefault(options.showSubTaskParent,false)};if(options.currentProjectId){urlParam["currentProjectId"]=options.currentProjectId}url+=AJS.$.param(urlParam);vWinUsers=window.open(url,"IssueSelectorPopup","status=no,resizable=yes,top=100,left=200,width="+this.options.popupWidth+",height="+this.options.popupHeight+",scrollbars=yes,resizable");vWinUsers.opener=self;vWinUsers.focus()},_createFurniture:function(disabled){var $popupLink;this._super(disabled);$popupLink=this._render("popupLink");this._assignEvents("popupLink",$popupLink);this.$container.addClass("jira-issue-picker");this.$container.addClass("hasIcon");this.$container.after($popupLink)},handleFreeInput:function(){var values=this.$field.val().toUpperCase().match(/\S+/g);if(values){this._addMultipleItems(jQuery.map(values,function(value){return{value:value,label:value}}))}this.$field.val("")},_events:{popupLink:{click:function(e){this._launchPopup();e.preventDefault()}}},_renders:{popupLink:function(){return AJS.$("<a class='issue-picker-popup' />").attr({href:"#",title:this.options.popupLinkMessage}).text(""+this.options.popupLinkMessage+"")}}});AJS.namespace("jira.issuepicker",null,JIRA.IssuePicker);AJS.namespace("AJS.IssuePicker",null,JIRA.IssuePicker);
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/LabelPicker.js' */
JIRA.LabelPicker=AJS.MultiSelect.extend({_getDefaultOptions:function(){return AJS.$.extend(true,this._super(),{ajaxOptions:{url:contextPath+"/includes/js/ajs/layer/labeldata.js",query:true,formatResponse:this._formatResponse},removeDuplicates:true,removeOnUnSelect:true,userEnteredOptionsMsg:"New Label"})},isValidItem:function(itemValue){return !/\s/.test(itemValue)},_handleServerSuggestions:function(data){if(data&&data.token){if(AJS.$.trim(this.$field.val())!==data.token){return }}this._super(data)},_handleSpace:function(){if(AJS.$.trim(this.$field.val())!==""){if(this.handleFreeInput()){this.hideSuggestions()}}},keys:{"Spacebar":function(event){this._handleSpace();event.preventDefault()}},_formatResponse:function(data){var optgroup=new AJS.GroupDescriptor({label:"Suggestions",type:"optgroup",styleClass:"labels-suggested"});if(data&&data.suggestions){AJS.$.each(data.suggestions,function(){optgroup.addItem(new AJS.ItemDescriptor({value:this.label,label:this.label,html:this.html,highlighted:true}))})}return[optgroup]},handleFreeInput:function(){var values=AJS.$.trim(this.$field.val()).match(/\S+/g);if(values){for(var value,i=0;value=values[i];i++){this.addItem({value:value,label:value})}this.model.$element.trigger("change")}this.$field.val("")}});AJS.namespace("AJS.LabelPicker",null,JIRA.LabelPicker);
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/MultiUserListPicker.js' */
(function($){JIRA.MultiUserListPicker=AJS.MultiSelect.extend({init:function(options){var restPath="/rest/api/1.0/users/picker";function formatResponse(response){var ret=[];$(response).each(function(i,suggestions){var groupDescriptor=new AJS.GroupDescriptor({weight:i,label:suggestions.footer});$(suggestions.users).each(function(){groupDescriptor.addItem(new AJS.ItemDescriptor({value:this.name,label:this.displayName,html:this.html,icon:this.avatarUrl,allowDuplicate:false,highlighted:true}))});ret.push(groupDescriptor)});return ret}$.extend(options,{itemAttrDisplayed:"label",userEnteredOptionsMsg:"Email address",showDropdownButton:false,removeOnUnSelect:true,ajaxOptions:{url:contextPath+restPath,query:true,data:{showAvatar:true},formatResponse:formatResponse},suggestionsHandler:AJS.UserListSuggestHandler,itemGroup:new AJS.Group(),itemBuilder:function(descriptor){return new JIRA.MultiUserListPicker.Item({descriptor:descriptor,container:this.$selectedItemsContainer})}});this._super(options)},_createFurniture:function(disabled){this._super(disabled);if(this.options.description){this._render("description",this.options.description).insertAfter(this.$field)}},updateItemsIndent:$.noop,_renders:{selectedItemsWrapper:function(){return $('<div class="recipients"></div>')},selectedItemsContainer:function(){return $("<ol />")},description:function(description){return $("<div />").addClass("description").text(description)}}})}(AJS.$));
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/MultiUserListPicker.Item.js' */
JIRA.MultiUserListPicker.Item=AJS.Control.extend({init:function(options){this._setOptions(options);this.$lozenge=this._render("item");this.$removeButton=this.$lozenge.find(".remove-recipient");this._assignEvents("instance",this);this._assignEvents("lozenge",this.$lozenge);this._assignEvents("removeButton",this.$removeButton);this.$lozenge.prependTo(this.options.container)},_getDefaultOptions:function(){return{label:null,title:null,container:null,focusClass:"focused"}},_renders:{"item":function(){var descriptor=this.options.descriptor;var data;if(descriptor.noExactMatch()!==true){data={escape:false,username:descriptor.value(),icon:descriptor.icon(),displayName:AJS.escapeHtml(descriptor.label())};return AJS.$(JIRA.Templates.Fields.recipientUsername(data))}else{data={email:descriptor.value(),icon:AJS.Meta.get("default-avatar-url")};return AJS.$(JIRA.Templates.Fields.recipientEmail(data))}}},_events:{"instance":{"remove":function(){this.$lozenge.remove()}},"removeButton":{"click":function(e){e.stopPropagation();this.trigger("remove")}}}});
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initCascadingSelects.js' */
(function(){function initCascadingSelect(el){AJS.$(el||document.body).find("div.aui-field-cascadingselect").add("tr.aui-field-cascadingselect").add("td.aui-field-cascadingselect").each(function(){var $container=AJS.$(this),parent=$container.find(".cascadingselect-parent"),parentOptions=parent.find("option"),oldClass="",child=$container.find(".cascadingselect-child"),childOptions=child.find("option"),selectedChild=child.find(":selected");function update(){var placeholder,currentClass=parent.find("option:selected").attr("class");if(currentClass!==oldClass){placeholder=jQuery("<span />").insertAfter(child);child.detach();child.find("option").each(function(i,elem){elem.parentNode.removeChild(this)});child.insertAfter(placeholder);placeholder.remove();childOptions.filter("."+parent.find("option:selected").attr("class")).appendTo(child);if(selectedChild.hasClass(parent.find("option:selected").attr("class"))){child.val(selectedChild.val())}else{child.val(child.find("option:first").val())}oldClass=currentClass}}parent.bind("cascadingSelectChanged",update).change(function(){AJS.$(this).trigger("cascadingSelectChanged")}).trigger("cascadingSelectChanged")})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){initCascadingSelect(context)}})})();
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initComponentPickers.js' */
(function(){function createPicker($selectField){new AJS.MultiSelect({element:$selectField,itemAttrDisplayed:"label",errorMessage:"{0} is not a valid component.",maxInlineResultsDisplayed:15})}function locateSelect(parent){var $parent=AJS.$(parent),$selectField;if($parent.is("select")){$selectField=$parent}else{$selectField=$parent.find("select")}return $selectField}var DEFAULT_SELECTORS=["div.aui-field-componentspicker.frother-control-renderer","td.aui-field-componentspicker.frother-control-renderer","tr.aui-field-componentspicker.frother-control-renderer"];function findComponentSelectAndConvertToPicker(context,selector){selector=selector||DEFAULT_SELECTORS.join(", ");AJS.$(selector,context).each(function(){var $selectField=locateSelect(this);if($selectField.length){createPicker($selectField)}})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){findComponentSelectAndConvertToPicker(context)}})})();
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initMultiselectPickers.js' */
(function(){function createPicker($selectField){new AJS.MultiSelect({element:$selectField,itemAttrDisplayed:"label",errorMessage:"{0} is not a valid value.",maxInlineResultsDisplayed:15,submitInputVal:true})}function locateSelect(parent){var $parent=AJS.$(parent),$selectField;if($parent.is("select")){$selectField=$parent}else{$selectField=$parent.find("select")}return $selectField}var DEFAULT_SELECTORS=["div.aui-field-multiselectpicker.frother-control-renderer"];function findComponentSelectAndConvertToPicker(context,selector){selector=selector||DEFAULT_SELECTORS.join(", ");AJS.$(selector,context).each(function(){var $selectField=locateSelect(this);if($selectField.length){createPicker($selectField)}})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){findComponentSelectAndConvertToPicker(context)}})})();
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initDatePickers.js' */
(function(){function initDatePicker(el){AJS.$(el||document.body).find("div.aui-field-datepicker").add("tr.aui-field-datepicker").add("td.aui-field-datepicker").each(function(){var $container=AJS.$(this),field=$container.find("input:text"),defaultCheckbox=$container.find("#useCurrentDate"),params=JIRA.parseOptionsFromFieldset($container.find("fieldset.datepicker-params"));params.context=el;Calendar.setup(params);function toggleField(){field.prop("disabled",defaultCheckbox.is(":checked"))}if(defaultCheckbox.length){toggleField();defaultCheckbox.click(toggleField)}})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){initDatePicker(context)}})})();
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initLegacyGroupPickers.js' */
(function(){function initLegacyGroupPicker(el){AJS.$(el||document.body).find("div.aui-field-grouppicker").add("tr.aui-field-grouppicker").add("td.aui-field-grouppicker").each(function(){var $container=AJS.$(this),trigger=$container.find("a.grouppicker-trigger"),url=trigger.attr("href");function openGroupPickerWindow(e){e.preventDefault();window.open(url,"GroupPicker","status=yes,resizable=yes,top=100,left=100,width=800,height=750,scrollbars=yes")}trigger.click(openGroupPickerWindow)})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){initLegacyGroupPicker(context)}})})();
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initIssuePickers.js' */
(function(){function initIssuePicker(el){AJS.$(el||document.body).find(".aui-field-issuepicker").each(function(){new JIRA.IssuePicker({element:AJS.$(this),userEnteredOptionsMsg:"Enter issue key",uppercaseUserEnteredOnSelect:true})})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){initIssuePicker(context)}})})();
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initLabelPickers.js' */
(function(){function createPicker($fieldset,context){var opts=JIRA.parseOptionsFromFieldset($fieldset),$select=AJS.$("#"+opts.id,context),issueId=opts.issueId,data={};if(/customfield_\d/.test(opts.id)){data.customFieldId=parseInt(opts.id.replace("customfield_",""),10)}new JIRA.LabelPicker({element:$select,ajaxOptions:{url:contextPath+"/rest/api/1.0/labels"+(issueId?"/"+issueId:"")+"/suggest",data:data}})}function locateFieldset(parent){var $parent=AJS.$(parent),$fieldset;if($parent.is(FIELDSET_SELECTOR)){$fieldset=$parent}else{$fieldset=$parent.find(FIELDSET_SELECTOR)}return $fieldset}var FIELDSET_SELECTOR="fieldset.labelpicker-params";function findLabelsFieldsetAndConvertToPicker(context,selector){selector=selector||".aui-field-labelpicker";AJS.$(selector,context).each(function(){var $fieldset=locateFieldset(this);if($fieldset.length>0){createPicker($fieldset,context)}})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){findLabelsFieldsetAndConvertToPicker(context)}})})();
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initVersionPickers.js' */
(function(){function createPicker($selectField){new AJS.MultiSelect({element:$selectField,itemAttrDisplayed:"label",removeOnUnSelect:false,submitInputVal:true,errorMessage:"{0} is not a valid version.",maxInlineResultsDisplayed:15})}function locateSelect(parent){var $parent=AJS.$(parent),$selectField;if($parent.is("select")){$selectField=$parent}else{$selectField=$parent.find("select")}return $selectField}function findVersionSelectAndConvertToPicker(context,selector){selector=selector||".aui-field-versionspicker.frother-control-renderer";AJS.$(selector,context).each(function(){var $selectField=locateSelect(this);if($selectField.length){createPicker($selectField)}})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){findVersionSelectAndConvertToPicker(context)}})})();
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initCommentControls.js' */
(function($){function applyCommentControls($contexts){if($contexts.attr("id")==="addcomment"){$contexts=$contexts.find("#issue-comment-add")}$contexts.each(function(){var $context=$(this);var $commentLevel=$context.find("#commentLevel");if($commentLevel.length>0){new AJS.SecurityLevelSelect($commentLevel)}$context.find(".wiki-js-prefs").each(function(){JIRA.wikiPreview(this,$context).init()})})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context){applyCommentControls(context)})})(AJS.$);
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/ProjectIssueTypeSelect.js' */
JIRA.ProjectIssueTypeSelect=Class.extend({init:function(options){var val,instance=this;this.$project=options.project;this.backgroundImages=this.removeBackgroundImages(options.issueTypeSelect);this.$refIssueTypeSelect=jQuery(options.issueTypeSelect).clone(true,true);this.$issueTypeSelect=options.issueTypeSelect;this.$projectIssueTypesSchemes=options.projectIssueTypesSchemes;this.$issueTypeSchemeIssueDefaults=options.issueTypeSchemeIssueDefaults;this.projectIssueTypeSchemes=this.getProjectIssueTypeSchemesFromDom();this.issueTypesSchemeDefaults=this.getIssueTypeSchemeIssueDefaults();if(instance.$project.length>0){val=instance.$project.val();instance.setIssueTypeScheme(instance.getIssueTypeSchemeForProject(val));if(this.$project.is("select")){this.$project.change(function(){var val=instance.$project.val();instance.lastIssueType=instance.$issueTypeSelect.find(":selected:first").val();instance.$refIssueTypeSelect.val("");instance.setIssueTypeScheme(instance.getIssueTypeSchemeForProject(val));instance.$issueTypeSelect.trigger("reset")})}}},getIssueTypeSchemeForProject:function(projectId){return this.projectIssueTypeSchemes[projectId]},getDefaultIssueTypeForScheme:function(issueTypeSchemeId){return this.issueTypesSchemeDefaults[issueTypeSchemeId]},removeBackgroundImages:function(issueTypeSelect){var map={};jQuery(issueTypeSelect).find("option[style]").each(function(){map[jQuery(this).attr("id")]=jQuery(this).css("background-image");jQuery(this).attr("style","");jQuery(this).removeAttr("style")});return map},addBackgroundImages:function(){var that=this;this.$issueTypeSelect.find("option").each(function(){jQuery(this).css("background-image",that.backgroundImages[jQuery(this).attr("id")])})},setIssueTypeScheme:function(issueTypeSchemeId){var selectedIssueType,instance=this,$toSelect,$placeholder=jQuery("<span class='hidden' />"),$optgroups=this.$refIssueTypeSelect.find("optgroup");$placeholder.insertAfter(this.$issueTypeSelect);this.$issueTypeSelect.detach().empty();if($optgroups.length){$optgroups.each(function(){var $optgroup=jQuery(this);if($optgroup.is("[data-scheme-id='"+issueTypeSchemeId+"']")){instance.$issueTypeSelect.append($optgroup.clone(true).children());return false}})}else{this.$issueTypeSelect.append(this.$refIssueTypeSelect.children())}selectedIssueType=this.$issueTypeSelect.find("option[data-selected]").val()||"";if(instance.lastIssueType){$toSelect=this.$issueTypeSelect.find("option[value='"+instance.lastIssueType+"']")}else{if(selectedIssueType){$toSelect=this.$issueTypeSelect.find("option[value='"+selectedIssueType+"']")}}if($toSelect&&$toSelect.length!==0){$toSelect.attr("selected","selected");this.$issueTypeSelect.val($toSelect.val())}else{this.setDefaultIssueType(issueTypeSchemeId)}this.$issueTypeSelect.insertAfter($placeholder);this.addBackgroundImages();this.$issueTypeSelect.attr("data-project",this.$project.val());$placeholder.remove()},setDefaultIssueType:function(issueTypeSchemeId){var defaultIssueType=this.getDefaultIssueTypeForScheme(issueTypeSchemeId);if(defaultIssueType!==""){this.$issueTypeSelect.find("option[value='"+defaultIssueType+"']").attr("selected","selected")}else{this.$issueTypeSelect.find("option").each(function(i,option){if(this.value&&this.value!==""){jQuery(option).attr("selected","selected");return false}})}},getProjectIssueTypeSchemesFromDom:function(){var projectIssueTypes={};this.$projectIssueTypesSchemes.find("input").each(function(i,input){var $input=jQuery(input),project=$input.attr("title"),issueTypes=$input.val();projectIssueTypes[project]=issueTypes});return projectIssueTypes},getIssueTypeSchemeIssueDefaults:function(){var issueTypesSchemeDefaults={};this.$issueTypeSchemeIssueDefaults.find("input").each(function(i,input){var $input=jQuery(input),issueTypeScheme=$input.attr("title"),defaultIssueType=$input.val();issueTypesSchemeDefaults[issueTypeScheme]=defaultIssueType});return issueTypesSchemeDefaults}});
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initProjectIssueTypeSelect.js' */
(function(){function findProjectAndIssueTypeSelectAndConvertToPicker(ctx){var $ctx=ctx||jQuery("body"),$project=$ctx.find(".project-field, .project-field-readonly"),$issueTypeSelect=$ctx.find(".issuetype-field"),$projectIssueTypes=$ctx.find(".project-issue-types"),$defaultProjectIssueTypes=$ctx.find(".default-project-issue-type");$project.each(function(i){new JIRA.ProjectIssueTypeSelect({project:jQuery(this),issueTypeSelect:$issueTypeSelect.eq(i),projectIssueTypesSchemes:$projectIssueTypes.eq(i),issueTypeSchemeIssueDefaults:$defaultProjectIssueTypes.eq(i)})})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){findProjectAndIssueTypeSelectAndConvertToPicker(context)}})})();
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initIssueTypePickers.js' */
(function(){function createissueTypePicker(context){context.find(".issuetype-field").each(function(){var $select=jQuery(this);$select.bind("reset",function(){$select.find("option[value='']").remove()}).trigger("reset");new AJS.SingleSelect({element:this,revertOnInvalid:true})})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){createissueTypePicker(context)}})})();
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initProjectPickers.js' */
(function(){function createProjectPicker(context){context.find(".project-field").each(function(){new AJS.SingleSelect({element:this,revertOnInvalid:true})})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){createProjectPicker(context)}})})();
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initLogWorkControls.js' */
(function($){JIRA.Events.VALIDATE_TIMETRACKING="validateTimeTracking";function toggleTimeTrackingContainer(context,activate){var $logWorkContainer=$(context).find("#worklog-logworkcontainer"),$timeTrackingContainer=$(context).find("#worklog-timetrackingcontainer"),$logWorkCheckbox=$(context).find("#log-work-activate");if(activate){$logWorkContainer.removeClass("hidden");$timeTrackingContainer.addClass("hidden");$logWorkCheckbox.prop("checked",true)}else{$logWorkContainer.addClass("hidden");$timeTrackingContainer.removeClass("hidden");$logWorkCheckbox.prop("checked",false)}}function applyLogworkControls(context){$("#log-work-adjust-estimate-new-value, #log-work-adjust-estimate-manual-value",context).attr("disabled","disabled");$("#log-work-adjust-estimate-"+$("input[name=worklog_adjustEstimate]:checked,input[name=adjustEstimate]:checked",context).val()+"-value",context).removeAttr("disabled");$("input[name=worklog_adjustEstimate],input[name=adjustEstimate]",context).change(function(){$("#log-work-adjust-estimate-new-value,#log-work-adjust-estimate-manual-value",context).attr("disabled","disabled");$("#log-work-adjust-estimate-"+$(this).val()+"-value",context).removeAttr("disabled")});$(context).find("#log-work-activate").change(function(){toggleTimeTrackingContainer(context,$(this).is(":checked"))})}JIRA.bind(JIRA.Events.VALIDATE_TIMETRACKING,function(e,context){toggleTimeTrackingContainer(context,true)});JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){applyLogworkControls(context)}})})(AJS.$);
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initPriorityPickers.js' */
(function($){function createPriorityPicker(context){context.find("select#priority").each(function(i,el){new AJS.SingleSelect({element:el,revertOnInvalid:true})})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){createPriorityPicker(context)}})})(AJS.$);
/* module-key = 'jira.webresources:jira-fields', location = '/includes/jira/field/initInlineAttach.js' */
(function(){function createInlineAttach(context){context.find("input[type=file]:not('.ignore-inline-attach')").inlineAttach()}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){createInlineAttach(context)}})})();
