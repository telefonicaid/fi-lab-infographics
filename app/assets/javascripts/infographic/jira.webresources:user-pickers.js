/* module-key = 'jira.webresources:user-pickers', location = '/includes/jira/field/userPickerUtil.js' */
(function($){JIRA.UserPickerUtil={formatResponse:function(data){var ret=[];$(data).each(function(i,suggestions){var groupDescriptor=new AJS.GroupDescriptor({weight:i,label:suggestions.footer});$(suggestions.users).each(function(){groupDescriptor.addItem(new AJS.ItemDescriptor({value:this.name,label:this.displayName,html:this.html,icon:this.avatarUrl,allowDuplicate:false,highlighted:true}))});ret.push(groupDescriptor)});return ret}}})(AJS.$);
/* module-key = 'jira.webresources:user-pickers', location = '/includes/jira/field/initSingleUserPickers.js' */
(function($){function createSingleUserPickers(ctx){var restPath="/rest/api/1.0/users/picker";$(".js-default-user-picker",ctx).each(function(){var $this=$(this);if($this.data("aui-ss")){return }var data={showAvatar:true},inputText=$this.data("inputValue");new AJS.SingleSelect({element:$this,submitInputVal:true,showDropdownButton:!!$this.data("show-dropdown-button"),errorMessage:AJS.format("There is no user \'\'{0}\'\'.","'{0}'"),ajaxOptions:{url:contextPath+restPath,query:true,data:data,formatResponse:JIRA.UserPickerUtil.formatResponse},inputText:inputText})})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){createSingleUserPickers(context)}})})(AJS.$);
/* module-key = 'jira.webresources:user-pickers', location = '/includes/jira/field/NoBrowseUserNamePicker.js' */
AJS.NoBrowseUserNamePicker=AJS.MultiSelect.extend({_getDefaultOptions:function(){return AJS.$.extend(true,this._super(),{errorMessage:"The requested user does not exist.",showDropdownButton:false,removeOnUnSelect:true,itemAttrDisplayed:"label"})},_handleCharacterInput:function(){},_setSuggestions:function(){},_handleServerError:function(smartAjaxResult){if(smartAjaxResult.status===404){this.showErrorMessage()}else{this._super()}},_deactivate:function(){this.validateAndAdd()},validateAndAdd:function(){var instance=this;if(AJS.$.trim(this.$field.val())===""){this.hideErrorMessage()}else{jQuery.ajax({url:contextPath+"/rest/api/2/user",data:{username:AJS.$.trim(instance.getQueryVal())},success:function(user){instance.hideErrorMessage();instance.$field.val("");instance.addItem(new AJS.ItemDescriptor({label:user.displayName,value:user.name}))},error:function(){instance.showErrorMessage()}})}},_handleSpace:function(){this.validate()},_handleServerSuggestions:function(){this.hideErrorMessage();this.handleFreeInput()},handleFreeInput:function(){var value=AJS.$.trim(this.$field.val());if(value!==""){this.addItem({value:value,label:value});this.model.$element.trigger("change")}this.$field.val("")},keys:{"Return":function(event){event.preventDefault();this.validateAndAdd()},"Spacebar":function(event){event.preventDefault();this.validateAndAdd()}}});
/* module-key = 'jira.webresources:user-pickers', location = '/includes/jira/field/initMultiUserPickers.js' */
(function(){function initMultiUserPicker(ctx){ctx.find(".js-default-multi-user-picker").each(function(){var $el=jQuery(this);if(AJS.params.currentUserCanBrowseUsers){new AJS.MultiSelect({element:this,itemAttrDisplayed:"label",showDropdownButton:false,removeOnUnSelect:true,submitInputVal:true,ajaxOptions:{url:contextPath+"/rest/api/1.0/users/picker",query:true,data:function(query){return{showAvatar:true,query:query,exclude:$el.val()}},formatResponse:JIRA.UserPickerUtil.formatResponse}})}else{new AJS.NoBrowseUserNamePicker({element:this})}})}JIRA.bind(JIRA.Events.NEW_CONTENT_ADDED,function(e,context,reason){if(reason!==JIRA.CONTENT_ADDED_REASON.panelRefreshed){initMultiUserPicker(context)}})})();
