<!-- replace_contents 'footer' -->

<footer>
<div>
  <%= Date.today.year %> 
  © 
  <%= link_to 'FI-WARE', 'http://fi-ware.eu/' %> & <%= link_to 'FI-OPS', 'http://fi-xifi.eu/fi-ops' %>. 
  The use of FI-LAB services is subject to the acceptance of the
  <a href="http://forge.fi-ware.eu/plugins/mediawiki/wiki/fiware/index.php/FI-LAB_Terms_and_Conditions"> 
    Terms and Conditions
  </a>
  and 
  <a href="http://forge.fi-ware.eu/plugins/mediawiki/wiki/fiware/index.php/FI-LAB_Personal_Data_Protection_Policy">
    Personal Data Protection Policy
  </a>
</div>
</footer>

<% if @attributesRegions != nil then %>
<!-- #################################################################################### -->

<!-- ===== init ===== -->
<script type="text/javascript">
	$(document).ready(function() 
	{
		/** =================================================================
		*  Map
		**/
		var map = new jvm.WorldMap({
// 		var map = $('#world-map').vectorMap({
		container: $('#world-map'),
		map: 'world_mill_en',
			backgroundColor: 'white',

			regionStyle: {
							  initial: {
							    fill: '#999999',
							    "fill-opacity": 1,
							    stroke: 'none',
							    "stroke-width": 0,
							    "stroke-opacity": 1
							  },
							  hover: {
							    "fill-opacity": 0.8
							  },
							  selected: {
								fill: 'orange'
							  },
							  selectedHover: {
							  }
						}

		});

		$('#world-map').vectorMap('set', 'focus', 4.3, 0.5, 0.3);

		var mapCpu = new jvm.WorldMap({
// 		$('#world-map-cpu').vectorMap({
		container: $('#world-map-cpu'),
		map: 'world_mill_en',
		regionStyle: {
			  initial: {
			    fill: '#ffffff',
			    "fill-opacity": 1,
			    stroke: 'none',
			    "stroke-width": 0,
			    "stroke-opacity": 1
			  },
			  hover: {
			    "fill-opacity": 0.8
			  },
			  selected: {
				fill: 'orange'
			  },
			  selectedHover: {
			  }
		},
		markerStyle: {
		      initial: {
			fill: '#ff9900',
			stroke: '#383f47'
		      }
		},
		series: {
			  regions: [{/*values: {"IT":20,"DE":90},*/
			 // attribute:'fill',
				      scale: ['#C8EEFF', '#0071A4'],
// 					      scale: {
// 							  84: '#4169E1',
// 							  64: '#FF69B4'
// 							},
				      normalizeFunction: 'linear'
			  }]
		}			     

		});

		$('#world-map-cpu').vectorMap('set', 'focus', 4.3, 0.5, 0.3);

		var mapRam = new jvm.WorldMap({
// 		$('#world-map-ram').vectorMap({
		container: $('#world-map-ram'),
		map: 'world_mill_en',
		regionStyle: {
			  initial: {
			    fill: '#ffffff',
			    "fill-opacity": 1,
			    stroke: 'none',
			    "stroke-width": 0,
			    "stroke-opacity": 1
			  },
			  hover: {
			    "fill-opacity": 0.8
			  },
			  selected: {
				fill: 'orange'
			  },
			  selectedHover: {
			  }
		},
		markerStyle: {
		      initial: {
			fill: '#ff9900',
			stroke: '#383f47'
		      }
		},
		series: {
			  regions: [{
					  scale: ['#C8EEFF', '#0071A4'],
					  normalizeFunction: 'linear'
			  }]
		}

		});

		$('#world-map-ram').vectorMap('set', 'focus', 4.3, 0.5, 0.3);

		var mapDisk = new jvm.WorldMap({
// 		$('#world-map-disk').vectorMap({
		container: $('#world-map-disk'),
		map: 'world_mill_en',
		regionStyle: {
			  initial: {
			    fill: '#ffffff',
			    "fill-opacity": 1,
			    stroke: 'none',
			    "stroke-width": 0,
			    "stroke-opacity": 1
			  },
			  hover: {
			    "fill-opacity": 0.8
			  },
			  selected: {
				fill: 'orange'
			  },
			  selectedHover: {
			  }
		},
		markerStyle: {
		  initial: {
		    fill: '#ff9900',
		    stroke: '#383f47'
		  }
		},
		series: {
			  regions: [{
					  scale: ['#C8EEFF', '#0071A4'],
					  normalizeFunction: 'linear'
			  }]
		}

		});

		$('#world-map-disk').vectorMap('set', 'focus', 4.3, 0.5, 0.3);

		var mapVm = new jvm.WorldMap({
// 		$('#world-map-vm').vectorMap({
		container: $('#world-map-vm'),
		map: 'world_mill_en',
		regionStyle: {
			  initial: {
			    fill: '#ffffff',
			    "fill-opacity": 1,
			    stroke: 'none',
			    "stroke-width": 0,
			    "stroke-opacity": 1
			  },
			  hover: {
			    "fill-opacity": 0.8
			  },
			  selected: {
				fill: 'orange'
			  },
			  selectedHover: {
			  }
		},
		markerStyle: {
		      initial: {
			fill: '#ff9900',
			stroke: '#383f47'
		      }
		},
		series: {
			  regions: [{
					  scale: ['#C8EEFF', '#0071A4'],
					  normalizeFunction: 'linear'
			  }]
		}

		});

		$('#world-map-vm').vectorMap('set', 'focus', 4.3, 0.5, 0.3);

		function ajaxFun() { $.ajax (
			  {
			    type: "GET",
			    url: "../api/v1/region",
			    contentType: "application/json; charset=utf-8",
			    data: {},
			    dataType: "json",
			    cache: false,
			    success: function(json){

// 			      var obj = $.parseJSON(json);

			      var nUsers = parseInt(json['tot']['total_nb_users']);
			      var nCores = parseInt(json['tot']['total_nb_cores']);
			      var nRam = parseInt(json['tot']['total_nb_ram']); 
			      var nHd = parseInt(json['tot']['total_nb_disk']);
			      var nVm = parseInt(json['tot']['total_nb_vm']);
			      var nRegions = parseInt(json['tot']['total_regions_count']);

			      var selectedRegions = [];
			      var selectedRegionsCpu = [];
			      var selectedMarkersCpu = [];
			      var selectedRegionsRam = [];
			      var selectedMarkersRam = [];
			      var selectedRegionsDisk = [];
			      var selectedMarkersDisk = [];
			      var selectedRegionsVm = [];
			      var selectedMarkersVm = [];

			      $.each(json['regions'], function(key, val) {
// 				nUsers += parseInt(this['nUser']);
// 				nCores += parseInt(this['coreTot']);
// 				nRam += parseInt(this['ramTot']);
// 				nHd += parseInt(this['hdTot']);
// 				nVm += parseInt(this['vmTot']);
// 				nRegions += 1;

// 				selectedRegions = selectedRegions + '\'' + key  + '\'';
				selectedRegions.push(this['country']);
				selectedRegionsCpu[this['country']] = parseInt(this['nb_cores']);
				selectedRegionsRam[this['country']] = parseInt(this['nb_ram']);
				selectedRegionsDisk[this['country']] = parseInt(this['nb_disk']);
				selectedRegionsVm[this['country']] = parseInt(this['nb_vm']);

				if(this['latitude'] != "" && this['longitude'] != "")
				{
				    var markerCpu = {};
				    markerCpu["latLng"] = [];
				    markerCpu["latLng"] = [parseFloat(this['latitude']),parseFloat(this['longitude'])];
				    markerCpu["name"] = this['name'] + " (" + this['nb_cores'] + " core)";
				    selectedMarkersCpu.push(markerCpu);

				    var markerRam = {};
				    markerRam["latLng"] = [];
				    markerRam["latLng"] = [parseFloat(this['latitude']),parseFloat(this['longitude'])];
				    markerRam["name"] = this['name'] + " (" + this['nb_ram'] + " Mb)";
				    selectedMarkersRam.push(markerRam);

				    var markerDisk = {};
				    markerDisk["latLng"] = [];
				    markerDisk["latLng"] = [parseFloat(this['latitude']),parseFloat(this['longitude'])];
				    markerDisk["name"] = this['name'] + " (" + this['nb_disk'] + " Gb)";
				    selectedMarkersDisk.push(markerDisk);

				    var markerVm = {};
				    markerVm["latLng"] = [];
				    markerVm["latLng"] = [parseFloat(this['latitude']),parseFloat(this['longitude'])];
				    markerVm["name"] = this['name'] + " (" + this['nb_vm'] + " vm)";
				    selectedMarkersVm.push(markerVm);
				}


			      });


			      $('#usersNum').html(nUsers);
			      $('#regionsNum').html(nRegions);
			      $('#coresNum').html(nCores);
			      $('#ramNum').html(nRam);
			      $('#hdNum').html(nHd);
			      $('#vmNum').html(nVm);

			      var maxCent = Math.floor(nUsers/100);
			      var i = 0;
			      var bigMen = '';
			      while (i < maxCent) {
				bigMen = bigMen + '<img src="/assets/infographic/omino.png" />';
				i+= 1;
			      }
			      $('#bigMen').html(bigMen);

			      var maxDec = Math.floor((nUsers - maxCent*100)/10);
			      i = 0;

			      var mediumMen = '';
			      while (i < maxDec) {
				mediumMen = mediumMen + '<img src="/assets/infographic/omino.png" />';
				i+= 1;
			      }
			      $('#mediumMen').html(mediumMen);

			      var maxUni = nUsers - maxCent*100 - maxDec*10;//console.log("unità:"+maxUni);
			      i = 0;

			      var smallMen = '';
			      while (i < maxUni) {
				smallMen = smallMen + '<img src="/assets/infographic/omino.png" />';
				i+= 1;
			      }
			      $('#smallMen').html(smallMen);  

			      var array_values_cpu = new Array();
			      for (var key in selectedRegionsCpu) {
				 array_values_cpu.push(parseInt(selectedRegionsCpu[key]));
			      }

			      var array_values_ram = new Array();
			      for (var key in selectedRegionsRam) {
				 array_values_ram.push(parseInt(selectedRegionsRam[key]));
			      }

			      var array_values_disk = new Array();
			      for (var key in selectedRegionsDisk) {
				 array_values_disk.push(parseInt(selectedRegionsDisk[key]));
			      }

			      var array_values_vm = new Array();
			      for (var key in selectedRegionsVm) {
				 array_values_vm.push(parseInt(selectedRegionsVm[key]));
			      }

			      map.clearSelectedRegions();
			      map.setSelectedRegions(selectedRegions);

			      mapCpu.series.regions[0].clear();
// 			      mapCpux.series.regions[0].params['min'] = 64;
// 			      mapCpux.series.regions[0].params['max'] = 84;
// 			      mapCpux.series.regions[0].scale['clearMinValue'] = 64;
// 			      mapCpux.series.regions[0].scale['clearMaxValue'] = 84;		     
			      var max_of_cpu = Math.max.apply(Math, array_values_cpu);
			      var min_of_cpu = Math.min.apply(Math, array_values_cpu);
			      mapCpu.series.regions[0].scale['minValue'] = min_of_cpu;
			      mapCpu.series.regions[0].scale['maxValue'] = max_of_cpu;
// 			      mapCpux.series.regions[0].setScale(['#C8EEFF', '#0071A4']);
// 			      mapCpux.series.regions[0].params['values'] = selectedRegionsCpu;
			      mapCpu.series.regions[0].setValues(selectedRegionsCpu); 
			      //console.log(mapCpu.series.regions[0]);			     
// 			      mapCpu.series.regions[0].normalizeFunction = 'polynomial';
			      mapCpu.removeAllMarkers();
			      mapCpu.addMarkers(selectedMarkersCpu);

			      mapRam.series.regions[0].clear();
			      var max_of_ram = Math.max.apply(Math, array_values_ram);
			      var min_of_ram = Math.min.apply(Math, array_values_ram);
			      mapRam.series.regions[0].scale['minValue'] = min_of_ram;
			      mapRam.series.regions[0].scale['maxValue'] = max_of_ram;
			      mapRam.series.regions[0].setValues(selectedRegionsRam);
			      mapRam.removeAllMarkers();
			      mapRam.addMarkers(selectedMarkersRam);

			      mapDisk.series.regions[0].clear();
			      var max_of_disk = Math.max.apply(Math, array_values_disk);
			      var min_of_disk = Math.min.apply(Math, array_values_disk);
			      mapDisk.series.regions[0].scale['minValue'] = min_of_disk;
			      mapDisk.series.regions[0].scale['maxValue'] = max_of_disk;
			      mapDisk.series.regions[0].setValues(selectedRegionsDisk);
			      mapDisk.removeAllMarkers();
			      mapDisk.addMarkers(selectedMarkersDisk);

			      mapVm.series.regions[0].clear();
			      var max_of_vm = Math.max.apply(Math, array_values_vm);
			      var min_of_vm = Math.min.apply(Math, array_values_vm);
			      mapVm.series.regions[0].scale['minValue'] = min_of_vm;
			      mapVm.series.regions[0].scale['maxValue'] = max_of_vm;
			      mapVm.series.regions[0].setValues(selectedRegionsVm);
			      mapVm.removeAllMarkers();
			      mapVm.addMarkers(selectedMarkersVm);


			    },
			    error: function(xhr, textStatus, errorThrown){
// 				alert('request failed->'+textStatus);
// 				console.log(xhr.status + ' ' + textStatus + ' ' + errorThrown);
			    } 
			}
		);
		}



		/** ================================================================= 
		*	Accordion Effect
		*/
		$('.accordionPanel').not('.leaveOpen').hide();
		$('.accordionTitle').click( function()
		{
			var $this = $(this);
			$this.next('.accordionPanel').slideToggle(function()
			{
				if( $this.hasClass('closeme' ) )
				{
					$this.removeClass('closeme' );
					$this.addClass('openme' );
				}
				else
				{
					$this.removeClass('openme' );
					$this.addClass('closeme' );
				}
			});
		});
		$('.accordionTitle').hover( 
			function()
			{
				$(this).addClass('hovered');
			},
			function()
			{
				$(this).removeClass('hovered');
			}
		);

		/** ================================================================= **/
		//Chiamo il mio ajax la prima volta
		ajaxFun();
		//e poi lo richiamo dopo 1 minuto
		setInterval(function(){ajaxFun()}, 60000);

// 		$. ajax (
// 			  {
// 			    type: "GET",
// 			    dataType: 'json',
// 			    url: "http://192.168.59.2:1337/region",
// 			    data: data,
// 			    success: function (data)
// 			    {
// 				  console.log(data)
// 			    }
// 			}
// 		);

// 		$.ajax({
// 			url: "http://192.168.59.2:1337/region",
// 			cache: false
// 			})
// 			.done(function( html ) {
// 			  console.log(html);
// 			});

// 		var request = $.ajax({
// 				      url: "http://192.168.59.2:1337/region",
// 				      type: "GET",
// 				      data: {},
// 				      dataType: "json"
// 		});
// 		
// 		request.done(function( msg ) {
// 		  console.log("AAAAAAAAAAA");
// 		  console.log(msg);
// 		});
// 		
// 		request.fail(function( jqXHR, textStatus ) {
// 							    alert( "Request failed: " + textStatus+jqXHR );
// 							    });

// 		$.ajax({
// 			dataType: "json",
// 			url: url,
// 			data: data,
// 			success: success
// 		});

// 		setInterval('window.location.reload()', 60000);
    
	});
</script>
<% elsif @attributesRegionsVms != nil then %>
<script type="text/javascript">
	$(document).ready(function() 
	{
	      function ajaxFun() { $.ajax (
			  {
			    type: "GET",
			    url: "../api/v1/region/vm",
			    contentType: "application/json; charset=utf-8",
			    data: {},
			    dataType: "json",
			    cache: false,
			    success: function(json){
			      //console.log(json);

			      var allRows = "";

			      $.each(json, function(key, val) {
				if(key != null && val != null)
				{
				    var allSubRows = "";

				    $.each(val, function(keySub, valSub) {
				      if(keySub != null && valSub != null)
				      {console.log(key);
					  allSubRows = allSubRows + "<DIV CLASS='row-current row-service'>"+
					    "<DIV CLASS='field field-service field-service-region'></DIV>"+
					    "<DIV CLASS='field field-service field-service-id'>"+keySub+"</DIV>"+
					    "<DIV CLASS='field field-service field-service-gauge'><div id=\"chart_div_cpu_"+keySub+"\" style=\"padding-left: 6px\"></div></DIV>"+
					    "<DIV CLASS='field field-service field-service-gauge'><div id=\"chart_div_ram_"+keySub+"\" style=\"padding-left: 6px\"></div></DIV>"+
					    "<DIV CLASS='field field-service field-service-field'>"+valSub["VHDD Free space"]+"</DIV>"+
					    "<DIV CLASS='field field-service field-service-gauge'><div id=\"chart_div_pro_"+keySub+"\" style=\"padding-left: 6px\"></div></DIV>"+
				    "</DIV>"+

				    "<script type='text/javascript'>"+

					  "google.load('visualization', '1', {packages:['gauge','corechart']});"+
					  "google.setOnLoadCallback(drawChart);"+
					  "function drawChart() {"+

					    "var options = {"+
					      "width: 100, height: 120,"+
					      "redFrom: 90, redTo: 100,"+
					      "yellowFrom:75, yellowTo: 90,"+
					      "minorTicks: 5"+
					    "};"+

					    "var dataCpu = google.visualization.arrayToDataTable(["+
					      "['Label', 'Value'],"+
					      "['CPU', "+valSub["CPU Load"].slice(0,-1)+"]"+
					    "]);"+

					    "var dataRam = google.visualization.arrayToDataTable(["+
					      "['Label', 'Value'],"+
					      "['RAM',"+ valSub["Used RAM Memory"].slice(0,-1)+"]"
+					    "]);"+

					    "var dataProcesses = google.visualization.arrayToDataTable(["+
					     " ['Proc', 'Processes'],"+
					      "['',"+ parseInt(["Total Proccess"])+"]"+
					    "]);"+

					    "var chartCpu = new google.visualization.Gauge(document.getElementById('chart_div_cpu_"+keySub+"'));"+
					    "chartCpu.draw(dataCpu, options);"+

					    "var chartRam = new google.visualization.Gauge(document.getElementById('chart_div_ram_"+keySub+"'));"+
					    "chartRam.draw(dataRam, options);"+

					    "var chartColumn = new"+ "google.visualization.ColumnChart(document.getElementById('chart_div_pro_"+keySub+"'));"+
					    "chartColumn.draw(dataProcesses,{width:100, height:95, vAxis:{maxValue:200,minValue:0}});"+ 
					  "}"+"<\/script>";
				      }
				    })

				    allRows = allRows + "<DIV ID='current-group-"+key+"' CLASS='row-current row-group'>"+
				  "<DIV CLASS='field field-group field-group-expand' onClick='toggleGroup(this)'>"+
					  "<IMG CLASS='field-group-expand-icon sprite expand' SRC='/assets/infographic/blank.gif'>"+
				  "</DIV>"+
				  "<DIV CLASS='field field-group field-group-region'>"+key+"</DIV>"+
				  "<DIV CLASS='field field-group field-group-id'></DIV>"+
				  "<DIV CLASS='field field-group field-group-field'></DIV>"+
				  "<DIV CLASS='field field-group field-group-field'></DIV>"+
				  "<DIV CLASS='field field-group field-group-field'></DIV>"+
			  "</DIV>"+
			  "<DIV ID='current-services-"+key+"' CLASS='collapsed'>"+allSubRows+"<\/DIV>";
				}
			      })

			      $('#tableContent').html(allRows);
			    }
			   }
	      )};

	      //Chiamo il mio ajax la prima volta
	      ajaxFun();
	      //e poi lo richiamo dopo 10 secondi
	      setInterval(function(){ajaxFun()}, 10000);
	});
</script>
<% else %>
<script type="text/javascript">

	var selectedMarkers = [];
	var markers = {};
	markers["latLng"] = [46.06787, 11.12108];
	markers["name"] = 'Trento';
	markers["style"] = {fill: 'rgba(255,0,0,1.0)', r:5};
	selectedMarkers.push(markers);
	var markers = {};
	markers["latLng"] = [52.30000, 13.25000];
	markers["name"] = 'Berlin';
	markers["style"] = {fill: 'rgba(0,255,0,1.0)', r:5};
	selectedMarkers.push(markers);
	var markers = {};
	markers["latLng"] = [48.86667, 2.33333];
	markers["name"] = 'Paris';
	markers["style"] = {fill: 'rgba(255,255,0,1.0)', r:5};
	selectedMarkers.push(markers);
	var markers = {};
	markers["latLng"] = [40.4, -3.68333];
	markers["name"] = 'Madrid';
	markers["style"] = {fill: 'rgba(0,0,0,0.5)', r:5};
	selectedMarkers.push(markers);
		
	var mapNodes = new jvm.WorldMap({
		container: $('#world-map-nodes'),
		map: 'world_mill_en',
		regionStyle: {
			  initial: {
			    fill: '#ffffff',
			    "fill-opacity": 1,
			    stroke: 'none',
			    "stroke-width": 0,
			    "stroke-opacity": 1
			  },
			  hover: {
			    "fill-opacity": 0.8
			  },
			  selected: {
				fill: 'orange'
			  },
			  selectedHover: {
			  }
		},
 		markerStyle: {
 		      initial: {
 			fill: '#ff9900',
 			stroke: '#383f47'
 		      }
 		},
 		onMarkerClick: function(events, index) {
// 		    alert(selectedMarkers[index].name);
		    var aTag = $("a[name='tableNodes']");
		    $('html,body').animate({scrollTop: aTag.offset().top},'slow');
		    $('.field-service').css('text-weight','normal');
		    $('.field-service').css('color','#8C8C8C');
		    $('.'+selectedMarkers[index].name).css('text-weight','bold');
		    $('.'+selectedMarkers[index].name).css('color','black');	    
		}//,
		/*series: {
			  regions: [{values: {"IT":20,"DE":90},
			 // attribute:'fill',
//				      scale: ['#C8EEFF', '#0071A4'],
// 					      scale: {
// 							  84: '#4169E1',
// 							  64: '#FF69B4'
// 							},
//				      normalizeFunction: 'linear'
			  }]
		}	*/		     

		});

		
		mapNodes.addMarkers(selectedMarkers);
		
		$('#world-map-nodes').vectorMap('set', 'focus', 4.3, 0.5, 0.3);
		
	
		$(".row-message").hide();
		$('.field-group-federation').click( function()
		{
			var $image = $(this).children();
			if( $image.hasClass('collapse' ) )
			{
				$image.removeClass('collapse' );
				$image.addClass('expand' );
			}
			else
			{
				$image.removeClass('expand' );
				$image.addClass('collapse' );
			}
			var $parent = $(this).parent();
			
			var $message = $parent.next(".row-message");
			$message.slideToggle(function()
			{
				if( $parent.hasClass('row-status-closed' ) )
				{
					$parent.removeClass('row-status-closed' );
					$parent.addClass('row-status-opened' );
				}
				else
				{
					$parent.removeClass('row-status-opened' );
					$parent.addClass('row-status-closed' );
				}
			});
		});
		$('.field-group-expand').click( function()
		{
			var $image = $(this).children();
			if( $image.hasClass('collapse' ) )
			{
				$image.removeClass('collapse' );
				$image.addClass('expand' );
			}
			else
			{
				$image.removeClass('expand' );
				$image.addClass('collapse' );
			}
			var $parent = $(this).parent();
			
			var $message = $parent.next(".row-message");
			$message.slideToggle(function()
			{
				if( $parent.hasClass('row-status-closed' ) )
				{
					$parent.removeClass('row-status-closed' );
					$parent.addClass('row-status-opened' );
				}
				else
				{
					$parent.removeClass('row-status-opened' );
					$parent.addClass('row-status-closed' );
				}
			});
		});
		
		$('#popupDialog').dialog({
		    closeOnEscape: true,
		    resizable: false,
		    modal: true,
		    autoOpen: false,
		    autoResize: true,
		    buttons: {
			  'Cancel': function() {
				      $(this).dialog('close');
				    },
			  'Send': function() {
// 				      $('#mainForm input#target').val( $(this).find('#widgetName').val() );
				      $(this).dialog('close');
				    }
			},
		    open: function () {
			$(".ui-dialog-titlebar-close").hide();
                        $(this).parents(".ui-dialog:first").css('background-color','#006699');
                        $(this).parents(".ui-dialog:first").css('color','white');
                        $(this).parents(".ui-dialog:first").css('padding','15px');
                        $(this).parents(".ui-dialog:first").css('text-align','center');
			}
		});
</script>
<% end %>
